// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PriceConsoleWithPostgreSQL.DataAccessLayer;

#nullable disable

namespace PriceConsoleWithPostgreSQL.Migrations
{
    [DbContext(typeof(TruckLoadContext))]
    [Migration("20220816225805_AddTotalWeightColumnForFTLWithFeatures")]
    partial class AddTotalWeightColumnForFTLWithFeatures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DriverFullTruckLoad", b =>
                {
                    b.Property<int>("DriversId")
                        .HasColumnType("integer");

                    b.Property<int>("FullTruckLoadsId")
                        .HasColumnType("integer");

                    b.HasKey("DriversId", "FullTruckLoadsId");

                    b.HasIndex("FullTruckLoadsId");

                    b.ToTable("DriverFullTruckLoad");
                });

            modelBuilder.Entity("DriverLessThanTruckLoad", b =>
                {
                    b.Property<int>("DriversId")
                        .HasColumnType("integer");

                    b.Property<int>("LessThanTruckLoadsId")
                        .HasColumnType("integer");

                    b.HasKey("DriversId", "LessThanTruckLoadsId");

                    b.HasIndex("LessThanTruckLoadsId");

                    b.ToTable("DriverLessThanTruckLoad");
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.DataAccessLayer.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.DataAccessLayer.FullTruckLoad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DestinationCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Distance")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PricePerKm")
                        .HasColumnType("double precision");

                    b.Property<double>("PriceValue")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("TransportationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TruckId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FullTruckLoads");
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.DataAccessLayer.FullTruckLoadFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContainerType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FullTruckLoad_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FullTruckLoad_Id")
                        .IsUnique();

                    b.ToTable("FullTruckLoadFeatures");
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.DataAccessLayer.LessThanTruckLoad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DestinationCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Distance")
                        .HasColumnType("double precision");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PricePerKm")
                        .HasColumnType("double precision");

                    b.Property<double>("PriceValue")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("TransportationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TruckId")
                        .HasColumnType("integer");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("LessThanTruckLoads");
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.Models.FullTruckLoadsEssential", b =>
                {
                    b.Property<string>("DestinationCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("FullTruckLoadsEssentials");

                    b.ToSqlQuery("select \"OriginCountry\", \"DestinationCountry\" from \"FullTruckLoads\"");
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.Models.FullTruckLoadWithFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContainerType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("double precision");

                    b.Property<int>("TruckId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FullTruckLoadWithFeatures");
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.Models.FullTruckView", b =>
                {
                    b.Property<int>("DriverAge")
                        .HasColumnType("integer");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DriversId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<double>("TotalWeight")
                        .HasColumnType("double precision");

                    b.ToView("FullTruckView");
                });

            modelBuilder.Entity("DriverFullTruckLoad", b =>
                {
                    b.HasOne("PriceConsoleWithPostgreSQL.DataAccessLayer.Driver", null)
                        .WithMany()
                        .HasForeignKey("DriversId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceConsoleWithPostgreSQL.DataAccessLayer.FullTruckLoad", null)
                        .WithMany()
                        .HasForeignKey("FullTruckLoadsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DriverLessThanTruckLoad", b =>
                {
                    b.HasOne("PriceConsoleWithPostgreSQL.DataAccessLayer.Driver", null)
                        .WithMany()
                        .HasForeignKey("DriversId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PriceConsoleWithPostgreSQL.DataAccessLayer.LessThanTruckLoad", null)
                        .WithMany()
                        .HasForeignKey("LessThanTruckLoadsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.DataAccessLayer.FullTruckLoadFeature", b =>
                {
                    b.HasOne("PriceConsoleWithPostgreSQL.DataAccessLayer.FullTruckLoad", "FullTruckLoad")
                        .WithOne("FullTruckLoadFeature")
                        .HasForeignKey("PriceConsoleWithPostgreSQL.DataAccessLayer.FullTruckLoadFeature", "FullTruckLoad_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FullTruckLoads_FullTruckLoadFeatures_FullTruckLoad_Id");

                    b.Navigation("FullTruckLoad");
                });

            modelBuilder.Entity("PriceConsoleWithPostgreSQL.DataAccessLayer.FullTruckLoad", b =>
                {
                    b.Navigation("FullTruckLoadFeature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
